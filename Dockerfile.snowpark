FROM node:16-alpine as frontend-build

WORKDIR /frontend

# Copy package files
COPY tableau-ai-extension/package*.json ./

# Install dependencies
RUN npm install --no-audit --no-fund

# Copy frontend source code
COPY tableau-ai-extension/ ./

# Set API URL to use relative path
ENV REACT_APP_API_BASE_URL='/api'

# Build the app
RUN npm run build

# Python backend stage
FROM python:3.9-slim

WORKDIR /app

# Install nginx to serve frontend
RUN apt-get update && apt-get install -y nginx && rm -rf /var/lib/apt/lists/*

# Configure nginx inline instead of using external file
RUN echo 'server { \n\
    listen 80; \n\
    server_name _; \n\
    root /var/www/html; \n\
    index index.html; \n\
    \n\
    # Serve static files directly \n\
    location / { \n\
        try_files $uri $uri/ /index.html; \n\
    } \n\
    \n\
    # Forward API requests to backend \n\
    location /api/ { \n\
        proxy_pass http://localhost:8080/; \n\
        proxy_set_header Host $host; \n\
        proxy_set_header X-Real-IP $remote_addr; \n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n\
        proxy_set_header X-Forwarded-Proto $scheme; \n\
    } \n\
    \n\
    # Health check endpoint \n\
    location /health { \n\
        proxy_pass http://localhost:8080/health; \n\
        proxy_set_header Host $host; \n\
        proxy_set_header X-Real-IP $remote_addr; \n\
    } \n\
}' > /etc/nginx/conf.d/default.conf

# Remove default site
RUN rm -f /etc/nginx/sites-enabled/default

# Copy frontend build from previous stage
COPY --from=frontend-build /frontend/build /var/www/html

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install Snowpark Python for get_active_session
RUN pip install --no-cache-dir snowflake-snowpark-python

# Copy backend application code
COPY *.py ./
COPY database ./database
COPY templates ./templates

# Create static directory which is expected by main.py
RUN mkdir -p static


# Start script to run both nginx and FastAPI
RUN echo '#!/bin/bash\nnginx\necho "Starting FastAPI server on port 8080..."\nuvicorn main:app --host 0.0.0.0 --port 8080' > /start.sh
RUN chmod +x /start.sh

# Expose port for Snowpark
EXPOSE 80

# Run both services
CMD ["/start.sh"]
